!function r(i,a,o){function u(t,e){if(!a[t]){if(!i[t]){var n="function"==typeof require&&require;if(!e&&n)return n(t,!0);if(c)return c(t,!0);throw(n=new Error("Cannot find module '"+t+"'")).code="MODULE_NOT_FOUND",n}n=a[t]={exports:{}},i[t][0].call(n.exports,function(e){return u(i[t][1][e]||e)},n,n.exports,r,i,a,o)}return a[t].exports}for(var c="function"==typeof require&&require,e=0;e<o.length;e++)u(o[e]);return u}({1:[function(e,t,n){(function(u){(function(){"use strict";var e,a=(e="undefined"!=typeof window?window.jQuery:void 0!==u?u.jQuery:null)&&e.__esModule?e:{default:e};function o(e){return function(e){if(Array.isArray(e))return r(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return r(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function t(){var e,i;n[(0,a.default)(this).val()]&&(e=(0,a.default)(this).val(),i="",a.default.each(n[e],function(e,t){i+='<option value="'.concat(e,'">').concat(t,"</option>")}),(0,a.default)(this).closest(".acf-field-settings").find('[data-key="repeater_label_field"] select,[data-key="repeater_value_field"] select,[data-key="repeater_display_field"] select').each(function(e,t){var n=(0,a.default)(t),r=n.val(),t=n.find('option[value=""]');acf.getField(n.closest(".acf-field"));n.html(i),t.length&&n.prepend(t),n.val(r)}))}var n=acf_wp_objects.repeated_fields,i='[data-key="repeater_field"] select';(0,a.default)(document).on("change",i,t).ready(function(){(0,a.default)(i).each(t)}),acf.addAction("new_field_object",function(e){var t,i,n=e.get("type"),r={image_size_select:{pick_input_name:"image_sizes",filter_props:["_builtin","crop","named"]},post_type_select:{pick_input_name:"post_types",filter_props:["_builtin","public","show_in_menu","show_in_nav_menus","show_ui"]},taxonomy_select:{pick_input_name:"taxonomies",filter_props:["_builtin","public","show_in_menu","show_in_nav_menus","show_ui"]}};r[n]&&(t=r[n],i=e.$setting,e.$setting=function(e){var r=this;if("choices textarea"!==e)return i.apply(this,arguments);var e=(0,a.default)("<textarea />"),n=[];return this.$input("pick").prop("checked")?this.$input(t.pick_input_name).find(":selected").each(function(e,t){n.push([(0,a.default)(t).val(),(0,a.default)(t).text()])}):n.push.apply(n,o(Object.values(acf_wp_objects[t.pick_input_name]).filter(function(n){try{return t.filter_props.forEach(function(e){var t=r.$('[data-name="'.concat(e,'"] [type="radio"]:checked')).val();if(""!==t&&n[e]!==("1"===t))throw""}),!0}catch(e){return!1}}).map(function(e){return[e.name,e.label]}))),e.val(n.map(function(e){return e.join(" : ")}).join("\n")),e})})}).call(this)}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
