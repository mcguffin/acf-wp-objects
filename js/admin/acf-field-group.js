!function a(o,u,f){function c(t,e){if(!u[t]){if(!o[t]){var n="function"==typeof require&&require;if(!e&&n)return n(t,!0);if(l)return l(t,!0);var r=new Error("Cannot find module '"+t+"'");throw r.code="MODULE_NOT_FOUND",r}var i=u[t]={exports:{}};o[t][0].call(i.exports,function(e){return c(o[t][1][e]||e)},i,i.exports,a,o,u,f)}return u[t].exports}for(var l="function"==typeof require&&require,e=0;e<f.length;e++)c(f[e]);return c}({1:[function(e,t,n){(function(e){"use strict";var t,o=(t="undefined"!=typeof window?window.jQuery:void 0!==e?e.jQuery:null)&&t.__esModule?t:{default:t};function u(e){return function(e){if(Array.isArray(e))return r(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return r(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function n(){if(i[(0,o.default)(this).val()]){var e=(0,o.default)(this).val(),a="";o.default.each(i[e],function(e,t){a+='<option value="'.concat(e,'">').concat(t,"</option>")}),(0,o.default)(this).closest(".acf-field-settings").find('[data-key="repeater_label_field"] select,[data-key="repeater_value_field"] select').each(function(e,t){var n=(0,o.default)(t),r=n.val(),i=n.find('option[value=""]');acf.getField(n.closest(".acf-field"));n.html(a),i.length&&n.prepend(i),n.val(r)})}}var i=acf_wp_objects.repeated_fields,a='[data-key="repeater_field"] select';(0,o.default)(document).on("change",a,n).ready(function(){(0,o.default)(a).each(n)}),acf.addAction("new_field_object",function(e){var t=e.get("type"),n={image_size_select:{pick_input_name:"image_sizes",filter_props:["_builtin","crop","named"]},post_type_select:{pick_input_name:"post_types",filter_props:["_builtin","public","show_in_menu","show_in_nav_menus","show_ui"]},taxonomy_select:{pick_input_name:"taxonomies",filter_props:["_builtin","public","show_in_menu","show_in_nav_menus","show_ui"]}};if(n[t]){var i=n[t],a=e.$setting;e.$setting=function(e){var r=this;if("choices textarea"!==e)return a.apply(this,arguments);var t=(0,o.default)("<textarea />"),n=[];return this.$input("pick").prop("checked")?this.$input(i.pick_input_name).find(":selected").each(function(e,t){n.push([(0,o.default)(t).val(),(0,o.default)(t).text()])}):n.push.apply(n,u(Object.values(acf_wp_objects[i.pick_input_name]).filter(function(n){try{return i.filter_props.forEach(function(e){var t=r.$('[data-name="'.concat(e,'"] [type="radio"]:checked')).val();if(""!==t&&n[e]!==("1"===t))throw""}),!0}catch(e){return!1}}).map(function(e){return[e.name,e.label]}))),t.val(n.map(function(e){return e.join(" : ")}).join("\n")),t}}})}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
